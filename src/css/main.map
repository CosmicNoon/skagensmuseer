{
	"version": 3,
	"file": "../scss/main.css",
	"sources": [
		"../scss/main.scss",
		"../scss/_include-media.scss",
		"../scss/_resets.scss",
		"../scss/_variable.scss",
		"../scss/_grid.scss",
		"../scss/_loader.scss",
		"../scss/_test.scss",
		"../scss/_forside.scss"
	],
	"sourcesContent": [
		"@import 'include-media';\r\n@import 'resets';\r\n@import 'variable';\r\n@import 'grid';\r\n@import 'loader';\r\n@import 'test';\r\n@import \"forside\";",
		"@charset \"UTF-8\";\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.9\r\n//\r\n//                http://include-media.com\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Hugo Giraudel (@hugogiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n\r\n\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  'phone': 320px,\r\n  'tablet': 768px,\r\n  'desktop': 1024px,\r\n) !default;\r\n\r\n@function getBp($bp) {\r\n  @if not map-has-key($map: $breakpoints, $key: $bp) {\r\n    @warn 'Breakpoint not found. Breakpoints available: #{map-keys($map: $breakpoints)}.';\r\n    @return $bp;\r\n  }\r\n  @return map-get($map: $breakpoints, $key: #{$bp});\r\n}\r\n\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\r\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\r\n) !default;\r\n\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1,\r\n  '': 0\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if feature-exists('at-error') {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {}\r\n}\r\n\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map-has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\r\n        @return false;\r\n      }\r\n    } @else if not index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n    @if str-index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: 'width';\r\n\r\n  @if str-length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n    $value: map-get($breakpoints, $value);\r\n  } @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log('Unknown unit `#{unit($value)}`.');\r\n  }\r\n\r\n  @if $operator == '>' {\r\n    $value: $value + $interval;\r\n  } @else if $operator == '<' {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n    @return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value) == 'number' {\r\n    @return $value;\r\n  } @else if type-of($value) != 'string' {\r\n    $_: im-log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $first-character: str-slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == '-');\r\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == '+' or $first-character == '-') {\r\n    $value: str-slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through str-length($value) {\r\n    $character: str-slice($value, $i, $i);\r\n\r\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\r\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\r\n    }\r\n\r\n    @if $character == '.' {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map-get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + map-get($numbers, $character) / $digits;\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n    $_: im-log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and length($conditions) == 0) or\r\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\r\n    @content;\r\n  } @else if ($im-media-support and length($conditions) > 0) {\r\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n      // Recursive call\r\n      @include media(slice($conditions, 2)...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
		"$debug: false !default;\r\n\r\n// Check for dead links during development\r\n@if $debug {\r\n    a[href=\"#\"] {\r\n        background-color: red;\r\n        border: 1px red;\r\n        box-shadow: 0px 0px 10px 0px red;\r\n    }\r\n}\r\n\r\nhtml {\r\n    // $min_width: $tablet-width;\r\n    // $max_width: $dekstop-width;\r\n    // $min_font: 14px;\r\n    // $max_font: 19px;\r\n    // @include fluid-font($min_width, $max_width, $min_font, $max_font);  \r\n    box-sizing: border-box;\r\n    scroll-behavior: smooth;\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow-x: hidden;\r\n    position: absolute;\r\n\r\n    @if not $debug {\r\n        user-zoom: fixed;\r\n    }\r\n}\r\n\r\n*, ::before, ::after {\r\n    box-sizing: inherit;\r\n    // box-sizing: inherit;\r\n}\r\n\r\nul {\r\n    margin: 0;\r\n    list-style: none;\r\n}\r\n\r\nbody {\r\n    margin: 0;\r\n    padding: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow-x: hidden;\r\n    // overflow: auto;\r\n    position: relative;\r\n    // font-family: $main-font;\r\n    // color: getColor(tri3);\r\n    // -webkit-font-smoothing: subpixel-antialiased;\r\n    // -webkit-font-smoothing: antialiased;\r\n    // -moz-osx-font-smoothing: grayscale;\r\n    // font-smoothing: antialiased;\r\n    text-rendering: optimizeLegibility;\r\n    font-family: 'Oswald', sans-serif;\r\n    font-weight: 300;\r\n    // letter-spacing: .02rem;\r\n    // color: #252C31;\r\n    color: #494948;\r\n\r\n    // font-smooth: auto;\r\n\r\n    @if not $debug {\r\n        // user-zoom: fixed;    \r\n        /* Prevent native touch events on Windows */\r\n        -ms-touch-action: none;\r\n    \r\n        /* Prevent the callout on tap-hold and text selection */\r\n        -webkit-touch-callout: none;\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n    \r\n        /* Prevent text resize on orientation change, useful for web-apps */\r\n        -webkit-text-size-adjust: none;\r\n        -moz-text-size-adjust: none;\r\n        -ms-text-size-adjust: none;\r\n        -o-text-size-adjust: none;\r\n        text-size-adjust: none;\r\n    }\r\n}\r\n\r\ncode {\r\n    font-family: monospace;\r\n}\r\n\r\nfigure {\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    height: auto;\r\n\r\n    img {\r\n        object-fit: contain;\r\n        object-position: center;\r\n        width: 100%;\r\n        height: auto;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n}\r\n\r\np {\r\n    // font-weight: 400;\r\n    letter-spacing: .02rem;\r\n}\r\n",
		"/* { primaer } */\r\n$greymain: rgba(73, 73, 72, 1);\r\n$goldmain: rgba(181, 149, 86, 1);\r\n/* { sekundær }  */\r\n$lightest: #ececec;\r\n/* { tertiær }  */\r\n$golddark: #7c683b;\r\n$golddarkest: #29353b;\r\n$golddarker: #3c4448;\r\n$lightgold: #e0d1b8;\r\n$halfgrey: #757474;\r\n$greylight: #646363;",
		"// /**************************************************\r\n// Grid mixins \r\n// v.1.7\r\n// ***************************************************/\r\n// SCSS CSS Grid \r\n\r\n\r\n////\r\n/// This is a poster comment.\r\n/// It will apply annotations to all items from file.\r\n/// @author Michael Koch\r\n/// @group Grid\r\n////\r\n\r\n\r\n/// Default variable to write/read check if root\r\n/// grid container exist.\r\n/// Feel very free to override in other files.\r\n/// @author Michael Koch\r\n$gridcontainer-exists: false !default;\r\n\r\n\r\n/// Mixin to define a grid container\r\n/// @author Michael Koch\r\n/// @param {Column specs} $colSpec - Number of columns and spec\r\n/// @param {Row specs} $rowSpec [null] - Number of rows and spec. For no row parse null.\r\n@mixin isGridContainer($colSpec, $rowSpec: null) {\r\n    \r\n    display: grid;\r\n    @if $rowSpec==null {\r\n        grid-template-columns: unquote(inspect($colSpec));\r\n    }\r\n    @else {\r\n        grid-template-columns: unquote(inspect($colSpec));\r\n        grid-template-rows: unquote(inspect($rowSpec));\r\n    }\r\n    \r\n    // Check if a root grid container exist\r\n    @if $gridcontainer-exists == false {\r\n        // Set up box model for root grid container\r\n        box-sizing: border-box;\r\n        // Make all child elements inherit the box model\r\n        & *,\r\n        *::before,\r\n        *::after {\r\n            box-sizing: border-box;\r\n        }\r\n        $gridcontainer-exists: true !global;\r\n    }\r\n    @content;\r\n}\r\n\r\n/// Shorthand mixin to define a grid container\r\n/// @author Michael Koch\r\n/// @param {Column specs} $colSpec - Number of columns and spec\r\n/// @param {Row specs} $rowSpec [null] - Number of rows and spec. For no row parse null.\r\n/// @alias isGridContainer\r\n@mixin igc($colSpec, $rowSpec:null) {\r\n    @include isGridContainer($colSpec, $rowSpec);\r\n    @content;\r\n}\r\n\r\n/// Mixin to make a grid container class\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column specs} $colSpec - Number of columns and spec\r\n/// @param {Row specs} $rowSpec [null] - Number of rows and spec. For no row parse null.\r\n@mixin makeGridContainer($selector, $colSpec, $rowSpec: null) {\r\n    @if type-of($selector) !=string {\r\n        @warn '1st parameter should be a selector name (e.g: .container), and therefore a string.';\r\n    } \r\n    #{$selector} {\r\n        @include isGridContainer($colSpec, $rowSpec) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n/// Shorthand mixin to make a grid container class\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column specs} $colSpec - Number of columns and spec\r\n/// @param {Row specs} $rowSpec [null] - Number of rows and spec. For no row parse null.\r\n/// @alias makeGridContainer\r\n@mixin mgc($selector, $colSpec, $rowSpec: null) {\r\n    @include makeGridContainer($selector, $colSpec, $rowSpec) {\r\n        @content;\r\n    }\r\n}\r\n\r\n/// Mixin to define a grid item\r\n/// @author Michael Koch\r\n/// @param {Column span} $colSpan - Row placement in outer grid\r\n/// @param {Row span} $rowSpan [null] - Column placement in outer grid. For no row parse null.\r\n@mixin isGridItem($colSpan, $rowSpan: null) {\r\n    @if $rowSpan==null {\r\n        grid-column: unquote(inspect($colSpan));\r\n    }\r\n    @else {\r\n        grid-column: unquote(inspect($colSpan));\r\n        grid-row: unquote(inspect($rowSpan));\r\n    }\r\n    @content;\r\n}\r\n\r\n/// Shorthand mixin to define a grid item\r\n/// @author Michael Koch\r\n/// @param {Column span} $colSpan - Row placement in outer grid\r\n/// @param {Row span} $rowSpan [null] - Column placement in outer grid. For no row parse null.\r\n/// @alias isGridItem\r\n@mixin igi($colSpan, $rowSpan: null) {\r\n    @include isGridItem($colSpan, $rowSpan);\r\n    @content;\r\n}\r\n\r\n/// Mixin to make a grid item\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column span} $colSpan - Row placement in outer grid\r\n/// @param {Row span} $rowSpan [null] - Column placement in outer grid. For no row parse null.\r\n@mixin makeGridItem($selector, $colSpan, $rowSpan: null) {\r\n    @if type-of($selector) !=string {\r\n        @warn '1st parameter should be a selector name (e.g: .container), and therefore a string.';\r\n    }\r\n    #{$selector} {\r\n        @include isGridItem($colSpan, $rowSpan) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n/// Shorthand mixin to make a grid item\r\n/// @author Michael Koch\r\n/// @param {Column span} $colSpan - Row placement in outer grid\r\n/// @param {Row span} $rowSpan [null] - Column placement in outer grid. For no row parse null.\r\n/// @alias makeGridItem\r\n@mixin mgi($selector, $colSpan, $rowSpan: null) {\r\n    @include makeGridItem($selector, $colSpan, $rowSpan) {\r\n        @content;\r\n    }\r\n}\r\n\r\n/// Mixin to define a sub grid container\r\n/// @author Michael Koch\r\n/// @param {Column span} $colSpan - Column placement in outer grid\r\n/// @param {Row span} $rowSpan - Row placement in outer grid\r\n/// @param {Column specs} $rowSpec - Number of column and spec in inner grid.\r\n/// @param {Row specs} $rowSpec [null] - Number of rows and spec in inner grid. For no row parse null.\r\n@mixin isSubGridContainer($colSpan, $rowSpan, $colSpec, $rowSpec: null) {\r\n    @include isGridContainer($colSpec, $rowSpec);\r\n    @include isGridItem($colSpan, $rowSpan);\r\n    @content;\r\n}\r\n\r\n/// Shorthand mixin to define a sub grid container\r\n/// @author Michael Koch\r\n/// @param {Column span} $colSpan - Column placement in outer grid\r\n/// @param {Row span} $rowSpan - Row placement in outer grid\r\n/// @param {Column specs} $rowSpec - Number of column and spec in inner grid.\r\n/// @param {Row specs} $rowSpec [null] - Number of rows and spec in inner grid. For no row parse null.\r\n/// @alias isSubGridContainer\r\n@mixin isgc($colSpan, $rowSpan, $colSpec, $rowSpec: null) {\r\n    @include isSubGridContainer($colSpan, $rowSpan, $colSpec, $rowSpec);\r\n    @content;\r\n}\r\n\r\n/// Mixin to make a sub grid container class\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column span} $colSpan - Column placement in outer grid\r\n/// @param {Row span} $rowSpan - Row placement in outer grid\r\n/// @param {Column specs} $rowSpec - Number of column and spec in inner grid.\r\n/// @param {Row specs} $rowSpec [null] - Number of rows and spec in inner grid. For no row parse null.\r\n@mixin makeSubGridContainer($selector, $colSpan, $rowSpan, $colSpec, $rowSpec: null) {\r\n    @include makeGridItem($selector, $colSpan, $rowSpan) {\r\n        @include isGridContainer($colSpec, $rowSpec) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n/// Shorthand mixin to make a sub grid container class\r\n/// @author Michael Koch\r\n/// @param {string} $selector - Selector to make. e.g class, ID, type etc.\r\n/// @param {Column span} $colSpan - Column placement in outer grid\r\n/// @param {Row span} $rowSpan - Row placement in outer grid\r\n/// @param {Column specs} $rowSpec - Number of column and spec in inner grid.\r\n/// @param {Row specs} $rowSpec [null] - Number of rows and spec in inner grid. For no row parse null.\r\n/// @alias makeSubGridContainer\r\n@mixin msgc($selector, $colSpan, $rowSpan, $colSpec, $rowSpec: null) {\r\n    @include makeSubGridContainer($selector, $colSpan, $rowSpan, $colSpec, $rowSpec) {\r\n        @content;\r\n    }\r\n}\r\n\r\n$grid-index: (  \r\n    2tm: 899, \r\n    2tl: 1, \r\n    dropdown: 210,\r\n    navigation: 205,\r\n    main-header: 200,\r\n    gridcontainer: 90,\r\n    teaser: 60,\r\n    info-text: 50, \r\n    bg-image: 40, \r\n    test3: 'span 4', \r\n    test: '1 / 13', \r\n    test1: '1 / 55', \r\n    test2: '1 / 14'\r\n) !default;\r\n\r\n@function getGrid($key) {\r\n    // @return unquote(map-get($grid-index, $key));\r\n    @if not map-has-key($grid-index, $key) {\r\n        // @warn \"Key `#{$key}` not found. Keys are: '#{map-keys($map: $z-index)}\"; // My compiler doesn't care for warnings, throw error.\r\n        @error \"Key `#{$key}` not found. Keys are: '#{map-keys($map: $grid-index)}'\";\r\n    }\r\n    @return unquote(inspect(map-get($grid-index, $key)));\r\n}\r\n\r\n@mixin getGrid($key) {\r\n    grid-column: getGrid($key);\r\n}",
		".svg-loader{\r\n  top: 50%;\r\n  left: 50%;\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  width: 50vmin;\r\n  height: 50vmin;\r\n  fill: white;\r\n  // background: transparent;\r\n  // margin: auto;\r\n  margin: 0;\r\n  padding: 0;\r\n  // height: 45%;\r\n  // width: 40%;\r\n}\r\n.top{\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: auto;\r\n  display: block;\r\n  animation: dot_top 3s 0s;\r\n  animation-fill-mode: forwards;\r\n}\r\n.mid{\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: auto;\r\n  display: block;\r\n  animation: dot_mid 1.5s 1.5s;\r\n  animation-fill-mode: forwards;\r\n}\r\n.bund{\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: auto;\r\n  display: block;\r\n  animation: dot_bund 2s 1s;\r\n  animation-fill-mode: forwards;\r\n}\r\n@keyframes dot_top{\r\n  from{fill:#fff; transform: scale(0);}\r\n  to {fill:#7b6c48; transform: scale(1);}\r\n}\r\n@keyframes dot_mid{\r\n  from{fill:#fff; transform: scale(0);}\r\n  to {fill:#7b6c48; transform: scale(1);}\r\n}\r\n@keyframes dot_bund{\r\n  from{fill:#fff; transform: scale(0);}\r\n  to {fill:#7b6c48; transform: scale(1);}\r\n}\r\n\r\n// .svg-loader{\r\n//   width: 30%;\r\n//   height: 40%;\r\n//   margin: auto;\r\n//   display: block;\r\n//   animation-delay: 1s;\r\n//   animation-direction: alternate;\r\n//   animation: svg_loader 3s infinite  alternate ;\r\n// }\r\n// @keyframes svg_loader {\r\n//   from {fill:white; transform: rotate(0deg) rotateX(0deg) scale(0);}\r\n//   to {fill:#7b6c48; transform: rotate(360deg) rotateX(360deg) scale(2);}\r\n// }\r\n\r\n// .svg-loader{\r\n//   width: 30%;\r\n//   height: 40%;\r\n//   margin: auto;\r\n//   display: block;\r\n//   animation-direction: alternate;\r\n//   animation: svg_loader 2s infinite  alternate ;\r\n// }\r\n// @keyframes svg_loader{\r\n//   from{fill:#fff;}\r\n//   to {fill:#7b6c48;}\r\n// }\r\n\r\n// .svg-loader{\r\n//   width: 30%;\r\n//   height: 40%;\r\n//   margin: auto;\r\n//   display: block;\r\n//   // animation-delay: 2s;\r\n//   // animation-direction: alternate;\r\n//   animation: svg_loader 3s infinite 2s;\r\n// }\r\n// @keyframes svg_loader {\r\n//   from {fill:white; transform: scale(0);}\r\n//   to {fill:#7b6c48; transform: scale(2);}\r\n// }\r\n",
		"$tc-black: #252C31;\r\n// $tc-black: #494948;\r\n.img-nice {\r\n    width: 100%;\r\n    max-height: auto;\r\n    object-position: center;\r\n    object-fit: cover;\r\n}\r\n\r\n.img-breaker {\r\n    height: 30vh;\r\n    max-height: 400px;\r\n    overflow: hidden;\r\n    text-align: center;\r\n    &--face {\r\n        .img-nice {\r\n            transform: translateY(-10%);\r\n        }\r\n    }\r\n}\r\n\r\n.video-container {\r\n    margin: 0;\r\n    padding: 0 1rem;\r\n\r\n\r\n    video {\r\n        // position: sticky;\r\n        z-index: 1;\r\n        top: 1rem;\r\n        max-width: 100%;\r\n        margin: 0;\r\n        padding: 0;\r\n        max-height: 100vh;\r\n    }\r\n\r\n    &__description {\r\n        position: relative;\r\n        z-index: 0;\r\n        // position: sticky;\r\n        // top: 1rem;\r\n        background: $tc-black;\r\n        color: #ffffff;\r\n        padding: 1rem;\r\n        margin: 0;\r\n        margin-top: -5px;\r\n\r\n        span {\r\n            display: block;\r\n            font-weight: 500;\r\n            font-size: 2rem;\r\n            line-height: 1;\r\n            // margin: 0;\r\n            // padding: 0;\r\n            // float: left;\r\n        }\r\n\r\n        svg {\r\n            position: absolute;\r\n            right: 1rem;\r\n            top: 50%;\r\n            height: 4.1rem;\r\n            width: 4rem;\r\n            transform: translateY(-50%);\r\n        }\r\n    }\r\n}\r\n\r\n.map {\r\n    position: relative;\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n\r\n    &__icon-top {\r\n        // width: calc(100% - 1rem);\r\n        position: absolute;\r\n        // display: block;\r\n        height: 4rem;\r\n        width: 4rem;\r\n        left: 50%;\r\n        // top: 75px + 32px;\r\n        // margin-right: -4rem;\r\n        margin-top: -2rem;\r\n        margin-left: -2rem;\r\n        // margin-right: auto;\r\n        filter: drop-shadow(0 1px 2px $tc-black);\r\n    }\r\n\r\n    iframe {\r\n        width: 100%;\r\n        height: 50vh;\r\n        margin: 0;\r\n        padding: 0;\r\n        border: 1px solid rgba($tc-black, 0.15);\r\n    }\r\n\r\n    &__description {\r\n        // display: block;\r\n        // display: inline-flex;\r\n        position: relative;\r\n        background: $tc-black;\r\n        color: #ffffff;\r\n        padding: 1rem;\r\n        margin: 0;\r\n        margin-top: -5px;\r\n\r\n        span {\r\n            display: block;\r\n            font-weight: 500;\r\n            font-size: 2rem;\r\n            line-height: 1;\r\n            // margin: 0;\r\n            // padding: 0;\r\n            // float: left;\r\n        }\r\n        svg {\r\n            position: absolute;\r\n            right: 1rem;\r\n            top: 50%;\r\n            // display: block;\r\n            height: 4.1rem;\r\n            width: 4rem;\r\n            // // margin: 4px;\r\n\r\n            // float: right;\r\n            transform: translateY(-50%);\r\n        }\r\n    }\r\n}\r\n\r\n.logo-svg {\r\n    fill: $tc-black;\r\n    // fill: #ffffff;\r\n\r\n    &--white {\r\n        fill: #ffffff;\r\n    }\r\n\r\n    &--loading {\r\n        animation-timing-function: ease-in;\r\n        fill: #ffffff;\r\n        // filter: drop-shadow(0 0 2px $tc-black);\r\n\r\n        // transform: translate()\r\n        .cls-1 {\r\n            transform-origin: center center;\r\n            // animation: grow 1s infinite;\r\n            // animation: name duration timing-function delay iteration-count direction fill-mode;\r\n            animation-name: grow;\r\n            animation-delay: 0s;\r\n            animation-iteration-count: infinite;\r\n            animation-duration: 1s;\r\n            animation-direction: alternate;\r\n        }\r\n        .cls-2 {\r\n            transform-origin: center center;\r\n            // transform-origin: 50%;\r\n            animation-name: grow;\r\n            animation-delay: .25s;\r\n            animation-iteration-count: infinite;\r\n            animation-duration: 1s;\r\n            animation-direction: alternate;\r\n        }\r\n        .cls-3 {\r\n            transform-origin: center center;\r\n            // transform-origin: 50%;\r\n            animation-name: grow;\r\n            animation-delay: .5s;\r\n            animation-iteration-count: infinite;\r\n            animation-duration: 1s;\r\n            animation-direction: alternate;\r\n        }\r\n    }\r\n}\r\n\r\n@keyframes grow {\r\n    from {\r\n        transform: scale(1);\r\n        fill: #efefefef;\r\n    }\r\n    to {\r\n        transform: scale(1.1);\r\n        fill: #252C31;\r\n    }\r\n}\r\n\r\n.icon-svg {\r\n\r\n    // stroke: $tc-black;\r\n    // fill: $tc-black;\r\n    &--white {\r\n        stroke: #ffffff;\r\n        fill: #ffffff;\r\n    }\r\n}\r\n\r\n.icon-header-menu {\r\n    stroke: $tc-black;\r\n    fill: $tc-black;\r\n\r\n    &--white {\r\n        stroke: #ffffff;\r\n        fill: #ffffff;\r\n    }\r\n}\r\n\r\n.icon-close {\r\n    // fill: none;\r\n    stroke-linecap: round;\r\n    // stroke-width: 1.8746;\r\n    stroke-width: 1.5;\r\n    fill: #ffffff;\r\n    stroke: #ffffff;\r\n}\r\n\r\n.icon-header {\r\n    stroke: $tc-black;\r\n    fill: $tc-black;\r\n\r\n    &--white {\r\n        stroke: #ffffff;\r\n        fill: #ffffff;\r\n    }\r\n}\r\n\r\n\r\n\r\n// .icon-menu {\r\n//     stroke-width: 0.35278;\r\n// }\r\n\r\n.frame-container {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    overflow-x: hidden;\r\n    scroll-behavior: smooth;\r\n}\r\n\r\n$space: 20px;\r\n$header-height: 150px;\r\n$header-icon-top: $header-height / 4;\r\n\r\n.logo {\r\n    &__header {\r\n        top: $header-icon-top;\r\n        left: 50%;\r\n        position: absolute;\r\n        transform: translate(-50%, -50%);\r\n        width: 2.5rem;\r\n        height: 2.5rem;\r\n        // background: transparent;\r\n        // margin: auto;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n    &__loading {\r\n        top: 50%;\r\n        left: 50%;\r\n        position: absolute;\r\n        transform: translate(-50%, -50%);\r\n        width: 50vmin;\r\n        height: 50vmin;\r\n        // background: transparent;\r\n        // margin: auto;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n}\r\n\r\n.menu {\r\n    position: absolute;\r\n    height: 100%;\r\n    width: 100%;\r\n    background: $tc-black;\r\n    transition: .5s ease;\r\n\r\n\r\n    left: 100%;\r\n    z-index: 300;\r\n\r\n    .nav-menu-button {\r\n        position: absolute;\r\n        height: 1.5rem;\r\n        width: 1.5rem;\r\n        transform: translate(0%, -50%);\r\n        top: $header-icon-top;\r\n        left: $space;\r\n        cursor: pointer;\r\n    }\r\n    \r\n    &__logo{\r\n        height: 2.5rem;\r\n        width: 2.5rem;\r\n        left: 50%;\r\n        top: $header-icon-top;\r\n        position: absolute;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n\r\n    &__footer {\r\n        position: absolute;\r\n        bottom: 0;\r\n        width: 100%;\r\n        height: 10vh;\r\n        background: #ffffff;\r\n        \r\n        .social-links {\r\n            margin: 0;\r\n            padding: 0 1rem;\r\n            width: 100%;\r\n            height: 100%;\r\n            @include isGridContainer('repeat(7, 1fr)');\r\n\r\n            li {\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n            }\r\n        }\r\n\r\n        svg {\r\n            width: 1.5rem;\r\n            height: 1.5rem;\r\n            display: block;\r\n        }\r\n    }\r\n\r\n    &.show-menu {\r\n        left: 0;\r\n        box-shadow: 0 0 1000px rgba(0, 0, 0, 1);\r\n    }\r\n}\r\n\r\n\r\n.navbar {\r\n    @include isGridContainer('repeat(3, 1fr)');\r\n    row-gap: 1rem;\r\n    position: relative;\r\n    // margin: 1rem;\r\n    top: 20vh;\r\n    // background: #f0f;\r\n    margin: 0 2rem;\r\n    padding: 0;\r\n    color: #ffffff;\r\n    font-weight: 400;\r\n    \r\n    button {\r\n        background: #ffffff;\r\n        -webkit-appearance: none;\r\n        border: 0;\r\n        // display: block;\r\n        // margin: 0;\r\n        // padding: 1rem;\r\n        border-radius: 100%;\r\n        width: 4rem;\r\n        height: 4rem;\r\n    }\r\n\r\n    a {\r\n        color: #ffffff;\r\n        text-decoration: none;\r\n        text-align: center;\r\n    }\r\n    li {\r\n        margin: auto;\r\n\r\n        svg {\r\n            display: block;\r\n            margin: auto;\r\n            width: 4rem;\r\n            height: 4rem;\r\n        }\r\n    }\r\n}\r\n\r\n.frame {\r\n    position: absolute;\r\n    left: -100%;\r\n    width: 100%;\r\n    height: 0;\r\n    background: #ffffff;\r\n    // transition: left .7s ease;\r\n    transition: all .7s ease;\r\n    z-index: 100;\r\n    visibility: hidden;\r\n    overflow-y: hidden;\r\n    // columns: 3;\r\n    // text-align: ;\r\n    // text-justify: newspaper;\r\n\r\n\r\n\r\n    >*:nth-child(2) {\r\n        margin-top: calc(#{$header-height} + 1rem);\r\n    }\r\n\r\n    h1 {\r\n        padding: 0 1rem;\r\n    }\r\n    // section {\r\n    //     p {\r\n    //         padding: 0 1rem;\r\n    //     }\r\n    // }\r\n\r\n    &.show {\r\n        // transition: none;\r\n        overflow-y: unset;\r\n        visibility: visible;\r\n        height: unset;\r\n        min-height: 100%;\r\n        left: 0;\r\n        box-shadow: 0 0 1000px rgba(0, 0, 0, 1);\r\n    }\r\n}\r\n\r\n.moving-header {\r\n    z-index: 101;\r\n    position: fixed;\r\n    width: 100%;\r\n    height: $header-height;\r\n    will-change: height;\r\n    transition: height 100ms ease-out;\r\n\r\n\r\n    // transition: all 50ms ease;\r\n    &--bg-museum {\r\n        background-image: url('../img/museum.png');\r\n        background-size: 120% auto;\r\n        // background-size: cover;\r\n        background-position: 50% 80%;\r\n        // background-position:  0%;\r\n        // background-position: 0 0;\r\n        // background-position: 40% center;\r\n        background-repeat: no-repeat;\r\n        $filter: drop-shadow(0 0 2px $tc-black);\r\n\r\n        h1 {\r\n            filter: $filter;\r\n        }\r\n\r\n        .logo__header {\r\n            filter: $filter;\r\n        }\r\n\r\n        .menu-button {\r\n            filter: $filter;\r\n        }\r\n    }\r\n    \r\n    &--bg-map {\r\n        // background-image: url('../img/map.jpg') rgba(255,255,255,0.5);\r\n        background-image: url('../img/map.jpg');\r\n        background-size: 100% auto;\r\n        // background-blend-mode: screen;\r\n        // background-size:  cover;\r\n        background-position: 0% 80%;\r\n        // background-position:  0%;\r\n        // background-position: 0 0;\r\n        // background-position: 40% center;\r\n        background-repeat: no-repeat;\r\n        $filter: drop-shadow(0 0 2px $tc-black);\r\n        filter: saturate(70%);\r\n\r\n        h1 {\r\n            filter: $filter;\r\n        }\r\n\r\n        .logo__header {\r\n            filter: $filter;\r\n        }\r\n\r\n        .menu-button {\r\n            filter: $filter;\r\n        }\r\n    }\r\n\r\n    &--bg-half-black {\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n    }\r\n    \r\n    &--bg-white {\r\n        background-color: rgba(255, 255, 255, 1);\r\n    }\r\n\r\n\r\n    h1 {\r\n        top: $space;\r\n        // left: 50%;\r\n        // right: $space;\r\n        right: 0;\r\n        position: absolute;\r\n        // background: transparent;\r\n        // margin: auto;\r\n        // transform: translate(-50%, 0%);\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    .small-move {\r\n        position: relative;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 40%;\r\n        // max-height: $header-height / 2;\r\n        max-height: 45px;\r\n\r\n        // transition: all 10s;\r\n        h1 {\r\n            left: 50%;\r\n            top: 100%;\r\n            position: absolute;\r\n            // transform: translate(-50%, -50%);\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n\r\n        .menu-button {\r\n            top: 100%;\r\n        }\r\n    }\r\n\r\n    .center-move {\r\n        position: relative;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n\r\n        h1 {\r\n            top: 50%;\r\n            // height: 20%;\r\n\r\n            // letter-spacing: unset;\r\n        }\r\n    }\r\n}\r\n\r\n.menu-button {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    left: $space;\r\n    top: $header-icon-top;\r\n    // top: 50%;\r\n    transform: translate(0%, -50%);\r\n    height: 1.5rem;\r\n    width: 1.5rem;\r\n}\r\n\r\n.logo__header {\r\n    top: $header-icon-top;\r\n    left: 50%;\r\n    position: absolute;\r\n    transform: translate(-50%, -50%);\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n    // background: transparent;\r\n    // margin: auto;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.fade-to-white {\r\n    // position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: transparent;\r\n    transition-property: background;\r\n    transition-duration: .2s;\r\n    transition-timing-function: ease-in;\r\n\r\n    color: #ffffff;\r\n\r\n    &.active {\r\n        background: rgba(255, 255, 255, 1);\r\n        // border-bottom: 1.3px solid rgba(0, 0, 0, 0.2);\r\n        // border-bottom-left-radius: 5px;\r\n        transition-timing-function: ease;\r\n        transition-duration: 1s;\r\n        color: $tc-black;\r\n\r\n        >* {\r\n            filter: none;\r\n        }\r\n    }\r\n}\r\n\r\n.text-museum {\r\n    h1 {\r\n        // font-size: 7vw;\r\n        font-size: 7vmin;\r\n    }\r\n    p {\r\n        padding: 0 1rem;\r\n    }\r\n}\r\n\r\n// .frame1 {\r\n//     background: #ababab;\r\n// }\r\n\r\n// .frame2 {\r\n//     background: #4f7680;\r\n// }\r\n\r\n.helper {\r\n    position: fixed;\r\n    z-index: 250;\r\n    top: 50vh;\r\n    left: 20px;\r\n}\r\n\r\n.stack-top {\r\n    z-index: 200;\r\n    // box-shadow: 0 0 1000px rgba(0, 0, 0, 1);\r\n    // transition: box-shadow .1s;\r\n}\r\n\r\n.restrict-size {\r\n    height: 100% !important;\r\n    overflow-y: hidden !important;\r\n}\r\n\r\n.hidden {\r\n    visibility: hidden;\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n}",
		".forside{\r\npadding: 1em;\r\nh2{\r\n    \r\n    text-align: center;\r\n}\r\niframe{\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    height: 55vh;\r\n}\r\n}\r\n // transition: all 50ms ease;\r\n .bgforside-museum {\r\n    background-image: url('../img/thumbnail.png');\r\n    background-size: 120% auto;\r\n    // background-size: cover;\r\n    background-position: 50% 80%;\r\n    // background-position:  0%;\r\n    // background-position: 0 0;\r\n    // background-position: 40% center;\r\n    background-repeat: no-repeat;\r\n    $filter: drop-shadow(0 0 2px $tc-black);\r\n\r\n    h1 {\r\n        filter: $filter;\r\n    }\r\n\r\n    .logo__header {\r\n        filter: $filter;\r\n    }\r\n\r\n    .menu-button {\r\n        filter: $filter;\r\n    }\r\n}\r\n.fade-to-white {\r\n    // position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: transparent;\r\n    transition-property: background;\r\n    transition-duration: .2s;\r\n    transition-timing-function: ease-in;\r\n\r\n    color: #ffffff;\r\n\r\n    &.active {\r\n        background: rgba(255, 255, 255, 1);\r\n        // border-bottom: 1.3px solid rgba(0, 0, 0, 0.2);\r\n        // border-bottom-left-radius: 5px;\r\n        transition-timing-function: ease;\r\n        transition-duration: 1s;\r\n        color: $tc-black;\r\n\r\n        >* {\r\n            filter: none;\r\n        }\r\n    }\r\n}\r\n"
	],
	"mappings": ";;AEWA,AAAA,IAAI,CAAC;EAMD,UAAU,EAAE,UAAW;EACvB,eAAe,EAAE,MAAO;EACxB,MAAM,EAAE,IAAK;EACb,KAAK,EAAE,IAAK;EACZ,UAAU,EAAE,MAAO;EACnB,QAAQ,EAAE,QAAS;EAGf,SAAS,EAAE,KAAM;CAExB;;;AAED,AAAA,CAAC,EAAE,AAAA,QAAQ,EAAE,AAAA,OAAO,CAAC;EACjB,UAAU,EAAE,OAAQ;CAEvB;;;AAED,AAAA,EAAE,CAAC;EACC,MAAM,EAAE,CAAE;EACV,UAAU,EAAE,IAAK;CACpB;;;AAED,AAAA,IAAI,CAAC;EACD,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,CAAE;EACX,MAAM,EAAE,IAAK;EACb,KAAK,EAAE,IAAK;EACZ,UAAU,EAAE,MAAO;EAEnB,QAAQ,EAAE,QAAS;EAOnB,cAAc,EAAE,kBAAmB;EACnC,WAAW,EAAE,oBAAqB;EAClC,WAAW,EAAE,GAAI;EAGjB,KAAK,EAAE,OAAQ;EAMX,4CAA4C;EAC5C,gBAAgB,EAAE,IAAK;EAEvB,wDAAwD;EACxD,qBAAqB,EAAE,IAAK;EAC5B,mBAAmB,EAAE,IAAK;EAC1B,gBAAgB,EAAE,IAAK;EACvB,eAAe,EAAE,IAAK;EACtB,WAAW,EAAE,IAAK;EAElB,oEAAoE;EACpE,wBAAwB,EAAE,IAAK;EAC/B,qBAAqB,EAAE,IAAK;EAC5B,oBAAoB,EAAE,IAAK;EAC3B,mBAAmB,EAAE,IAAK;EAC1B,gBAAgB,EAAE,IAAK;CAE9B;;;AAED,AAAA,IAAI,CAAC;EACD,WAAW,EAAE,SAAU;CAC1B;;;AAED,AAAA,MAAM,CAAC;EACH,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,CAAE;EACX,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;CAUhB;;;AAdD,AAMI,MANE,CAMF,GAAG,CAAC;EACA,UAAU,EAAE,OAAQ;EACpB,eAAe,EAAE,MAAO;EACxB,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;EACb,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,CAAE;CACd;;;AAGL,AAAA,CAAC,CAAC;EAEE,cAAc,EAAE,MAAO;CAC1B;;AC1GD,iBAAiB;AAGjB,oBAAoB;AAEpB,mBAAmB;;AELnB,AAAA,WAAW,CAAA;EACT,GAAG,EAAE,GAAI;EACT,IAAI,EAAE,GAAI;EACV,QAAQ,EAAE,QAAS;EACnB,SAAS,EAAE,qBAAS;EACpB,KAAK,EAAE,MAAO;EACd,MAAM,EAAE,MAAO;EACf,IAAI,EAAE,KAAM;EAGZ,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,CAAE;CAGZ;;;AACD,AAAA,IAAI,CAAA;EACF,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;EACb,MAAM,EAAE,IAAK;EACb,OAAO,EAAE,KAAM;EACf,SAAS,EAAE,aAAc;EACzB,mBAAmB,EAAE,QAAS;CAC/B;;;AACD,AAAA,IAAI,CAAA;EACF,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;EACb,MAAM,EAAE,IAAK;EACb,OAAO,EAAE,KAAM;EACf,SAAS,EAAE,iBAAkB;EAC7B,mBAAmB,EAAE,QAAS;CAC/B;;;AACD,AAAA,KAAK,CAAA;EACH,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;EACb,MAAM,EAAE,IAAK;EACb,OAAO,EAAE,KAAM;EACf,SAAS,EAAE,cAAe;EAC1B,mBAAmB,EAAE,QAAS;CAC/B;;AACD,UAAU,CAAV,OAAU;EACR,AAAA,IAAI;IAAC,IAAI,EAAC,IAAK;IAAE,SAAS,EAAE,QAAK;;EACjC,AAAA,EAAE;IAAE,IAAI,EAAC,OAAQ;IAAE,SAAS,EAAE,QAAK;;;;AAErC,UAAU,CAAV,OAAU;EACR,AAAA,IAAI;IAAC,IAAI,EAAC,IAAK;IAAE,SAAS,EAAE,QAAK;;EACjC,AAAA,EAAE;IAAE,IAAI,EAAC,OAAQ;IAAE,SAAS,EAAE,QAAK;;;;AAErC,UAAU,CAAV,QAAU;EACR,AAAA,IAAI;IAAC,IAAI,EAAC,IAAK;IAAE,SAAS,EAAE,QAAK;;EACjC,AAAA,EAAE;IAAE,IAAI,EAAC,OAAQ;IAAE,SAAS,EAAE,QAAK;;;;;AC/CrC,AAAA,SAAS,CAAC;EACN,KAAK,EAAE,IAAK;EACZ,UAAU,EAAE,IAAK;EACjB,eAAe,EAAE,MAAO;EACxB,UAAU,EAAE,KAAM;CACrB;;;AAED,AAAA,YAAY,CAAC;EACT,MAAM,EAAE,IAAK;EACb,UAAU,EAAE,KAAM;EAClB,QAAQ,EAAE,MAAO;EACjB,UAAU,EAAE,MAAO;CAMtB;;;AAVD,AAMQ,kBANI,CAMJ,SAAS,CAAC;EACN,SAAS,EAAE,gBAAU;CACxB;;;AAIT,AAAA,gBAAgB,CAAC;EACb,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,MAAO;CA2CnB;;;AA7CD,AAKI,gBALY,CAKZ,KAAK,CAAC;EAEF,OAAO,EAAE,CAAE;EACX,GAAG,EAAE,IAAK;EACV,SAAS,EAAE,IAAK;EAChB,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,CAAE;EACX,UAAU,EAAE,KAAM;CACrB;;;AAbL,AAAA,6BAAgB,CAeG;EACX,QAAQ,EAAE,QAAS;EACnB,OAAO,EAAE,CAAE;EAGX,UAAU,EAzCP,OAAO;EA0CV,KAAK,EAAE,OAAQ;EACf,OAAO,EAAE,IAAK;EACd,MAAM,EAAE,CAAE;EACV,UAAU,EAAE,IAAK;CAoBpB;;;AA5CL,AA0BQ,6BA1BQ,CA0BR,IAAI,CAAC;EACD,OAAO,EAAE,KAAM;EACf,WAAW,EAAE,GAAI;EACjB,SAAS,EAAE,IAAK;EAChB,WAAW,EAAE,CAAE;CAIlB;;;AAlCT,AAoCQ,6BApCQ,CAoCR,GAAG,CAAC;EACA,QAAQ,EAAE,QAAS;EACnB,KAAK,EAAE,IAAK;EACZ,GAAG,EAAE,GAAI;EACT,MAAM,EAAE,MAAO;EACf,KAAK,EAAE,IAAK;EACZ,SAAS,EAAE,gBAAU;CACxB;;;AAIT,AAAA,IAAI,CAAC;EACD,QAAQ,EAAE,QAAS;EACnB,UAAU,EAAE,IAAK;EACjB,OAAO,EAAE,IAAK;CAyDjB;;;AA5DD,AAAA,cAAI,CAKY;EAER,QAAQ,EAAE,QAAS;EAEnB,MAAM,EAAE,IAAK;EACb,KAAK,EAAE,IAAK;EACZ,IAAI,EAAE,GAAI;EAGV,UAAU,EAAE,KAAM;EAClB,WAAW,EAAE,KAAM;EAEnB,MAAM,EAAE,8BAAW;CACtB;;;AAlBL,AAoBI,IApBA,CAoBA,MAAM,CAAC;EACH,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;EACb,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,CAAE;EACX,MAAM,EAAE,GAAG,CAAC,KAAK,CA7Fd,sBAAO;CA8Fb;;;AA1BL,AAAA,iBAAI,CA4Be;EAGX,QAAQ,EAAE,QAAS;EACnB,UAAU,EApGP,OAAO;EAqGV,KAAK,EAAE,OAAQ;EACf,OAAO,EAAE,IAAK;EACd,MAAM,EAAE,CAAE;EACV,UAAU,EAAE,IAAK;CAuBpB;;;AA3DL,AAsCQ,iBAtCJ,CAsCI,IAAI,CAAC;EACD,OAAO,EAAE,KAAM;EACf,WAAW,EAAE,GAAI;EACjB,SAAS,EAAE,IAAK;EAChB,WAAW,EAAE,CAAE;CAIlB;;;AA9CT,AA+CQ,iBA/CJ,CA+CI,GAAG,CAAC;EACA,QAAQ,EAAE,QAAS;EACnB,KAAK,EAAE,IAAK;EACZ,GAAG,EAAE,GAAI;EAET,MAAM,EAAE,MAAO;EACf,KAAK,EAAE,IAAK;EAIZ,SAAS,EAAE,gBAAU;CACxB;;;AAIT,AAAA,SAAS,CAAC;EACN,IAAI,EAnIG,OAAO;CA6KjB;;;AA3CD,AAAA,gBAAS,CAII;EACL,IAAI,EAAE,OAAQ;CACjB;;;AANL,AAAA,kBAAS,CAQM;EACP,yBAAyB,EAAE,OAAQ;EACnC,IAAI,EAAE,OAAQ;CAgCjB;;;AA1CL,AAcQ,kBAdC,CAcD,MAAM,CAAC;EACH,gBAAgB,EAAE,aAAc;EAGhC,cAAc,EAAE,IAAK;EACrB,eAAe,EAAE,EAAG;EACpB,yBAAyB,EAAE,QAAS;EACpC,kBAAkB,EAAE,EAAG;EACvB,mBAAmB,EAAE,SAAU;CAClC;;;AAvBT,AAwBQ,kBAxBC,CAwBD,MAAM,CAAC;EACH,gBAAgB,EAAE,aAAc;EAEhC,cAAc,EAAE,IAAK;EACrB,eAAe,EAAE,IAAK;EACtB,yBAAyB,EAAE,QAAS;EACpC,kBAAkB,EAAE,EAAG;EACvB,mBAAmB,EAAE,SAAU;CAClC;;;AAhCT,AAiCQ,kBAjCC,CAiCD,MAAM,CAAC;EACH,gBAAgB,EAAE,aAAc;EAEhC,cAAc,EAAE,IAAK;EACrB,eAAe,EAAE,GAAI;EACrB,yBAAyB,EAAE,QAAS;EACpC,kBAAkB,EAAE,EAAG;EACvB,mBAAmB,EAAE,SAAU;CAClC;;AAIT,UAAU,CAAV,IAAU;EACN,AAAA,IAAI;IACA,SAAS,EAAE,QAAK;IAChB,IAAI,EAAE,SAAS;;EAEnB,AAAA,EAAE;IACE,SAAS,EAAE,UAAK;IAChB,IAAI,EAAE,OAAQ;;;;;AAItB,AAAA,gBAAS,CAII;EACL,MAAM,EAAE,OAAQ;EAChB,IAAI,EAAE,OAAQ;CACjB;;;AAGL,AAAA,iBAAiB,CAAC;EACd,MAAM,EArMC,OAAO;EAsMd,IAAI,EAtMG,OAAO;CA4MjB;;;AARD,AAAA,wBAAiB,CAIJ;EACL,MAAM,EAAE,OAAQ;EAChB,IAAI,EAAE,OAAQ;CACjB;;;AAGL,AAAA,WAAW,CAAC;EAER,cAAc,EAAE,KAAM;EAEtB,YAAY,EAAE,GAAI;EAClB,IAAI,EAAE,OAAQ;EACd,MAAM,EAAE,OAAQ;CACnB;;;AAED,AAAA,YAAY,CAAC;EACT,MAAM,EAxNC,OAAO;EAyNd,IAAI,EAzNG,OAAO;CA+NjB;;;AARD,AAAA,mBAAY,CAIC;EACL,MAAM,EAAE,OAAQ;EAChB,IAAI,EAAE,OAAQ;CACjB;;;AASL,AAAA,gBAAgB,CAAC;EACb,QAAQ,EAAE,QAAS;EACnB,GAAG,EAAE,CAAE;EACP,IAAI,EAAE,CAAE;EACR,MAAM,EAAE,CAAE;EACV,KAAK,EAAE,CAAE;EACT,UAAU,EAAE,MAAO;EACnB,eAAe,EAAE,MAAO;CAC3B;;;AAMD,AAAA,aAAK,CACS;EACN,GAAG,EAJO,MAAc;EAKxB,IAAI,EAAE,GAAI;EACV,QAAQ,EAAE,QAAS;EACnB,SAAS,EAAE,qBAAS;EACpB,KAAK,EAAE,MAAO;EACd,MAAM,EAAE,MAAO;EAGf,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,CAAE;CACd;;;AAZL,AAAA,cAAK,CAaU;EACP,GAAG,EAAE,GAAI;EACT,IAAI,EAAE,GAAI;EACV,QAAQ,EAAE,QAAS;EACnB,SAAS,EAAE,qBAAS;EACpB,KAAK,EAAE,MAAO;EACd,MAAM,EAAE,MAAO;EAGf,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,CAAE;CACd;;;AAGL,AAAA,KAAK,CAAC;EACF,QAAQ,EAAE,QAAS;EACnB,MAAM,EAAE,IAAK;EACb,KAAK,EAAE,IAAK;EACZ,UAAU,EApRH,OAAO;EAqRd,UAAU,EAAE,QAAS;EAGrB,IAAI,EAAE,IAAK;EACX,OAAO,EAAE,GAAI;CAqDhB;;;AA9DD,AAWI,KAXC,CAWD,gBAAgB,CAAC;EACb,QAAQ,EAAE,QAAS;EACnB,MAAM,EAAE,MAAO;EACf,KAAK,EAAE,MAAO;EACd,SAAS,EAAE,mBAAS;EACpB,GAAG,EA7CO,MAAc;EA8CxB,IAAI,EAhDJ,IAAI;EAiDJ,MAAM,EAAE,OAAQ;CACnB;;;AAnBL,AAAA,WAAK,CAqBM;EACH,MAAM,EAAE,MAAO;EACf,KAAK,EAAE,MAAO;EACd,IAAI,EAAE,GAAI;EACV,GAAG,EAtDO,MAAc;EAuDxB,QAAQ,EAAE,QAAS;EACnB,SAAS,EAAE,qBAAS;CACvB;;;AA5BL,AAAA,aAAK,CA8BS;EACN,QAAQ,EAAE,QAAS;EACnB,MAAM,EAAE,CAAE;EACV,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;EACb,UAAU,EAAE,OAAQ;CAqBvB;;;AAxDL,AAqCQ,aArCH,CAqCG,aAAa,CAAC;EACV,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,MAAO;EAChB,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;EF7RrB,OAAO,EAAE,IAAK;EAEV,qBAAqB,EAAE,cAAO;EAU9B,UAAU,EAAE,UAAW;CEyRtB;;;AAjDT,AFtOU,aEsOL,CAqCG,aAAa,CF3QX,CAAC;AEsOX,AFrOS,aEqOJ,CAqCG,aAAa,CF1Qb,CAAC,AAAA,QAAQ;AEqOjB,AFpOS,aEoOJ,CAqCG,aAAa,CFzQb,CAAC,AAAA,OAAO,CAAC;EACL,UAAU,EAAE,UAAW;CAC1B;;;AEkOT,AA4CY,aA5CP,CAqCG,aAAa,CAOT,EAAE,CAAC;EACC,OAAO,EAAE,IAAK;EACd,eAAe,EAAE,MAAO;EACxB,WAAW,EAAE,MAAO;CACvB;;;AAhDb,AAmDQ,aAnDH,CAmDG,GAAG,CAAC;EACA,KAAK,EAAE,MAAO;EACd,MAAM,EAAE,MAAO;EACf,OAAO,EAAE,KAAM;CAClB;;;AAvDT,AAAA,KAAK,AA0DA,UAAU,CAAC;EACR,IAAI,EAAE,CAAE;EACR,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAI;CAC9B;;;AAIL,AAAA,OAAO,CAAC;EFrTJ,OAAO,EAAE,IAAK;EAEV,qBAAqB,EAAE,cAAO;EEqTlC,OAAO,EAAE,IAAK;EACd,QAAQ,EAAE,QAAS;EAEnB,GAAG,EAAE,IAAK;EAEV,MAAM,EAAE,MAAO;EACf,OAAO,EAAE,CAAE;EACX,KAAK,EAAE,OAAQ;EACf,WAAW,EAAE,GAAI;CA6BpB;;;AAvCD,AAYI,OAZG,CAYH,MAAM,CAAC;EACH,UAAU,EAAE,OAAQ;EACpB,kBAAkB,EAAE,IAAK;EACzB,MAAM,EAAE,CAAE;EAIV,aAAa,EAAE,IAAK;EACpB,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;CAChB;;;AAtBL,AAwBI,OAxBG,CAwBH,CAAC,CAAC;EACE,KAAK,EAAE,OAAQ;EACf,eAAe,EAAE,IAAK;EACtB,UAAU,EAAE,MAAO;CACtB;;;AA5BL,AA6BI,OA7BG,CA6BH,EAAE,CAAC;EACC,MAAM,EAAE,IAAK;CAQhB;;;AAtCL,AAgCQ,OAhCD,CA6BH,EAAE,CAGE,GAAG,CAAC;EACA,OAAO,EAAE,KAAM;EACf,MAAM,EAAE,IAAK;EACb,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;CAChB;;;AAIT,AAAA,MAAM,CAAC;EACH,QAAQ,EAAE,QAAS;EACnB,IAAI,EAAE,KAAM;EACZ,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,CAAE;EACV,UAAU,EAAE,OAAQ;EAEpB,UAAU,EAAE,YAAa;EACzB,OAAO,EAAE,GAAI;EACb,UAAU,EAAE,MAAO;EACnB,UAAU,EAAE,MAAO;CA6BtB;;;AAvCD,AAiBkB,MAjBZ,GAiBD,CAAC,AAAA,UAAW,CAAA,AAAA,CAAC,EAAE;EACZ,UAAU,EAAE,kBAAI;CACnB;;;AAnBL,AAqBI,MArBE,CAqBF,EAAE,CAAC;EACC,OAAO,EAAE,MAAO;CACnB;;;AAvBL,AAAA,MAAM,AA8BD,KAAK,CAAC;EAEH,UAAU,EAAE,KAAM;EAClB,UAAU,EAAE,OAAQ;EACpB,MAAM,EAAE,KAAM;EACd,UAAU,EAAE,IAAK;EACjB,IAAI,EAAE,CAAE;EACR,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAI;CAC9B;;;AAGL,AAAA,cAAc,CAAC;EACX,OAAO,EAAE,GAAI;EACb,QAAQ,EAAE,KAAM;EAChB,KAAK,EAAE,IAAK;EACZ,MAAM,EArLM,KAAK;EAsLjB,WAAW,EAAE,MAAO;EACpB,UAAU,EAAE,qBAAsB;CAoHrC;;;AA1HD,AAAA,yBAAc,CAUG;EACT,gBAAgB,EAAE,wBAAG;EACrB,eAAe,EAAE,SAAU;EAE3B,mBAAmB,EAAE,OAAQ;EAI7B,iBAAiB,EAAE,SAAU;CAchC;;;AAhCL,AAqBQ,yBArBM,CAqBN,EAAE,CAAC;EACC,MAAM,EAHD,4BAAW;CAInB;;;AAvBT,AAyBQ,yBAzBM,CAyBN,aAAa,CAAC;EACV,MAAM,EAPD,4BAAW;CAQnB;;;AA3BT,AA6BQ,yBA7BM,CA6BN,YAAY,CAAC;EACT,MAAM,EAXD,4BAAW;CAYnB;;;AA/BT,AAAA,sBAAc,CAkCA;EAEN,gBAAgB,EAAE,qBAAG;EACrB,eAAe,EAAE,SAAU;EAG3B,mBAAmB,EAAE,MAAO;EAI5B,iBAAiB,EAAE,SAAU;EAE7B,MAAM,EAAE,aAAQ;CAanB;;;AA3DL,AAgDQ,sBAhDM,CAgDN,EAAE,CAAC;EACC,MAAM,EAJD,4BAAW;CAKnB;;;AAlDT,AAoDQ,sBApDM,CAoDN,aAAa,CAAC;EACV,MAAM,EARD,4BAAW;CASnB;;;AAtDT,AAwDQ,sBAxDM,CAwDN,YAAY,CAAC;EACT,MAAM,EAZD,4BAAW;CAanB;;;AA1DT,AAAA,6BAAc,CA6DO;EACb,gBAAgB,EAAE,kBAAI;CACzB;;;AA/DL,AAAA,wBAAc,CAiEE;EACR,gBAAgB,EAAE,KAAI;CACzB;;;AAnEL,AAsEI,cAtEU,CAsEV,EAAE,CAAC;EACC,GAAG,EAzPH,IAAI;EA4PJ,KAAK,EAAE,CAAE;EACT,QAAQ,EAAE,QAAS;EAInB,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,CAAE;CACd;;;AAjFL,AAmFI,cAnFU,CAmFV,WAAW,CAAC;EACR,QAAQ,EAAE,QAAS;EACnB,GAAG,EAAE,CAAE;EACP,IAAI,EAAE,CAAE;EACR,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,GAAI;EAEZ,UAAU,EAAE,IAAK;CAepB;;;AAzGL,AA6FQ,cA7FM,CAmFV,WAAW,CAUP,EAAE,CAAC;EACC,IAAI,EAAE,GAAI;EACV,GAAG,EAAE,IAAK;EACV,QAAQ,EAAE,QAAS;EAEnB,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,CAAE;CACd;;;AApGT,AAsGQ,cAtGM,CAmFV,WAAW,CAmBP,YAAY,CAAC;EACT,GAAG,EAAE,IAAK;CACb;;;AAxGT,AA2GI,cA3GU,CA2GV,YAAY,CAAC;EACT,QAAQ,EAAE,QAAS;EACnB,GAAG,EAAE,CAAE;EACP,IAAI,EAAE,CAAE;EACR,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;CAShB;;;AAzHL,AAmHQ,cAnHM,CA2GV,YAAY,CAQR,EAAE,CAAC;EACC,GAAG,EAAE,GAAI;CAIZ;;;AAIT,AAAA,YAAY,CAAC;EACT,MAAM,EAAE,OAAQ;EAChB,QAAQ,EAAE,QAAS;EACnB,IAAI,EAjTA,IAAI;EAkTR,GAAG,EAhTW,MAAc;EAkT5B,SAAS,EAAE,mBAAS;EACpB,MAAM,EAAE,MAAO;EACf,KAAK,EAAE,MAAO;CACjB;;;AAED,AAAA,aAAa,CAAC;EACV,GAAG,EAxTW,MAAc;EAyT5B,IAAI,EAAE,GAAI;EACV,QAAQ,EAAE,QAAS;EACnB,SAAS,EAAE,qBAAS;EACpB,KAAK,EAAE,MAAO;EACd,MAAM,EAAE,MAAO;EAGf,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,CAAE;CACd;;;AAED,AAAA,cAAc,CAAC;EAEX,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;EACb,UAAU,EAAE,WAAY;EACxB,mBAAmB,EAAE,UAAW;EAChC,mBAAmB,EAAE,GAAI;EACzB,0BAA0B,EAAE,OAAQ;EAEpC,KAAK,EAAE,OAAQ;CAclB;;;AAvBD,AAAA,cAAc,AAWT,OAAO,CAAC;EACL,UAAU,EAAE,KAAI;EAGhB,0BAA0B,EAAE,IAAK;EACjC,mBAAmB,EAAE,EAAG;EACxB,KAAK,EAxkBF,OAAO;CA6kBb;;;AAtBL,AAmBS,cAnBK,AAWT,OAAO,GAQH,CAAC,CAAC;EACC,MAAM,EAAE,IAAK;CAChB;;;AAIT,AACI,YADQ,CACR,EAAE,CAAC;EAEC,SAAS,EAAE,KAAM;CACpB;;;AAJL,AAKI,YALQ,CAKR,CAAC,CAAC;EACE,OAAO,EAAE,MAAO;CACnB;;;AAWL,AAAA,OAAO,CAAC;EACJ,QAAQ,EAAE,KAAM;EAChB,OAAO,EAAE,GAAI;EACb,GAAG,EAAE,IAAK;EACV,IAAI,EAAE,IAAK;CACd;;;AAED,AAAA,UAAU,CAAC;EACP,OAAO,EAAE,GAAI;CAGhB;;;AAED,AAAA,cAAc,CAAC;EACX,MAAM,EAAE,eAAgB;EACxB,UAAU,EAAE,iBAAkB;CACjC;;;AAED,AAAA,OAAO,CAAC;EACJ,UAAU,EAAE,MAAO;EACnB,QAAQ,EAAE,QAAS;EACnB,KAAK,EAAE,CAAE;EACT,MAAM,EAAE,CAAE;EACV,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,CAAE;CACd;;;AC3nBD,AAAA,QAAQ,CAAA;EACR,OAAO,EAAE,GAAI;CAWZ;;;AAZD,AAEA,QAFQ,CAER,EAAE,CAAA;EAEE,UAAU,EAAE,MAAO;CACtB;;;AALD,AAMA,QANQ,CAMR,MAAM,CAAA;EACF,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,CAAE;EACX,MAAM,EAAE,IAAK;CAChB;;;AAGA,AAAA,iBAAiB,CAAC;EACf,gBAAgB,EAAE,2BAAG;EACrB,eAAe,EAAE,SAAU;EAE3B,mBAAmB,EAAE,OAAQ;EAI7B,iBAAiB,EAAE,SAAU;CAchC;;;AAtBA,AAWG,iBAXc,CAWd,EAAE,CAAC;EACC,MAAM,EAHD,4BAAW;CAInB;;;AAbJ,AAeG,iBAfc,CAed,aAAa,CAAC;EACV,MAAM,EAPD,4BAAW;CAQnB;;;AAjBJ,AAmBG,iBAnBc,CAmBd,YAAY,CAAC;EACT,MAAM,EAXD,4BAAW;CAYnB;;;AAEL,AAAA,cAAc,CAAC;EAEX,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;EACb,UAAU,EAAE,WAAY;EACxB,mBAAmB,EAAE,UAAW;EAChC,mBAAmB,EAAE,GAAI;EACzB,0BAA0B,EAAE,OAAQ;EAEpC,KAAK,EAAE,OAAQ;CAclB;;;AAvBD,AAAA,cAAc,AAWT,OAAO,CAAC;EACL,UAAU,EAAE,KAAI;EAGhB,0BAA0B,EAAE,IAAK;EACjC,mBAAmB,EAAE,EAAG;EACxB,KAAK,EDtDF,OAAO;CC2Db;;;AAtBL,AAmBS,cAnBK,AAWT,OAAO,GAQH,CAAC,CAAC;EACC,MAAM,EAAE,IAAK;CAChB",
	"names": []
}